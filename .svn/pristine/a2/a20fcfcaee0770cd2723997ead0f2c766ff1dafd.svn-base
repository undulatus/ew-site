import { Component, Input, OnInit, ViewChild } from '@angular/core';
import { IMyOptions, IMyDateModel } from 'mydatepicker';
import { Opportunity } from '../domain/opportunity.model';
import { OpportunityActivity } from '../domain/opportunity-activity.model';
import { Activity } from '../domain/activity.model';
import { ActivityService } from '../services/activity.service';

import { MarketCircle } from '../domain/market-circle.model';
import { MarketCircleService } from '../services/market-circle.service';
import { ServiceLine } from '../domain/service-line.model';
import { ServiceLineService } from '../services/service-line.service';

@Component({
    moduleId: module.id,
    templateUrl: 'worksheet.component.html',
    styleUrls: ['./worksheet.component.css'],
    providers: [MarketCircleService, ServiceLineService, ActivityService]
})

export class WorksheetComponent implements OnInit {
    @Input() maxProjDuration: string;

    @ViewChild('projectDuration') projectDuration;

    errorMessage: string;
    opportunity: Opportunity;
    activity: Activity;
    opportunityActivities: OpportunityActivity[];
    activities: Activity[];
    activityServiceLine: Activity[];
    marketCircles: MarketCircle[];
    serviceLines: ServiceLine[];

    versions = ['v.1', 'v.2', 'v.3'];

    // https://github.com/kekeh/mydatepicker
    private myDatePickerOptions: IMyOptions = {
        // other options...
        dateFormat: 'mm-dd-yyyy',
    };

    constructor(
        private activityService: ActivityService,

        private marketCircleService: MarketCircleService,
        private serviceLineService: ServiceLineService
    ) { }

    ngOnInit() {
        this.opportunity = new Opportunity();
        this.activity = new Activity();

        this.getOpportunityElements();
        this.opportunity.durationGranularity = 'month';
    }

    getOpportunityElements() {
        this.marketCircleService.getMarketCircles().then(marketCircles=>{
            this.marketCircles = marketCircles;
        }).catch(error => this.errorMessage = <any>error);

        this.serviceLineService.getServiceLines().then(serviceLines=>{
            this.serviceLines = serviceLines;
        }).catch(error => this.errorMessage = <any>error);
    }

    createOpportunity() {
        console.log('****************************************');
        console.log('opportunity: ', this.opportunity);
        console.log('opportunityActivities: ', this.opportunityActivities);
        console.log('****************************************');
    }

    validateDuration() {
        // user should not be able to input numbers more than the speicified max
        // console.log('------------ duration: ', this.projectDuration.nativeElement.value, ' ------------');
    }

    removeFirstOption(el) {
        el.children[0].remove();
    }
    
    resetDuration() {
        this.projectDuration.nativeElement.value = "";
    }

    onDateChanged(event: IMyDateModel) {
        // event properties are: event.date, event.jsdate, event.formatted and event.epoc
    }

}
